[{"categories":["编码语言"],"content":"C语言实现银行管理系统","date":"2023-08-11","objectID":"/2023/08/bank-manage-system-by-c/","tags":["C语言","系统"],"title":"银行管理系统实例(C语言版）","uri":"/2023/08/bank-manage-system-by-c/"},{"categories":["编码语言"],"content":" 来点废话 在上小学期的时间里，用C语言简单的写了一个银行的管理系统实例，整体上还是显得有些粗糙。但是对于初学者来说，可以作为一些参考。程序的编写环境是VS2013，为了能让学校运行，所以在DEVC++中进行了测试。由于在编写的时候在循环体中加入了局部变量，所以在VC++中是不能被编译的，如果有需要的同学可以自行修改。 ","date":"2023-08-11","objectID":"/2023/08/bank-manage-system-by-c/:0:0","tags":["C语言","系统"],"title":"银行管理系统实例(C语言版）","uri":"/2023/08/bank-manage-system-by-c/"},{"categories":["编码语言"],"content":"应用代码 ","date":"2023-08-11","objectID":"/2023/08/bank-manage-system-by-c/:1:0","tags":["C语言","系统"],"title":"银行管理系统实例(C语言版）","uri":"/2023/08/bank-manage-system-by-c/"},{"categories":["编码语言"],"content":"1. 全局头文件(banksystem.h) /* **banksystem文件头 **ASorb time:201807 */ #include\u003cstdio.h\u003e #include\u003cstdlib.h\u003e #include\u003cstring.h\u003e #include\u003ctime.h\u003e //基本常量 #define user_max 99 //用户最大数 #define take_notes_max 20 //记录数 #define data_file \"bankdata.orb\" //数据文件默认地址 #define user_size sizeof(user) //结构体变量 struct take_notes{ char handle[10]; //操作 float money; //操作的钱数 struct tm T; //时间结构体 }; typedef struct{ char name[25]; //用户名 unsigned int card; //银行卡号 char pass[8]; //密码 float balance; //余额 struct take_notes list[take_notes_max]; }user; //宏 ","date":"2023-08-11","objectID":"/2023/08/bank-manage-system-by-c/:1:1","tags":["C语言","系统"],"title":"银行管理系统实例(C语言版）","uri":"/2023/08/bank-manage-system-by-c/"},{"categories":["编码语言"],"content":"2. 入口文件（main.cpp） /* **功能实现：银行系统实例 **开发环境：VS2013 **ASorb time:201807 **默认管理名：asorb 号：18072801 密码：123456 **测试环境：DEVC++5.10 （修改：1/结构体不能直接赋值，分成员赋值） */ //主函数 #include\"banksystem.h\" int main(){ void file_true(); void face(); char face_1(); void face_2(); void add_user(); user* login(); face(); //初始化窗口 file_true(); char h1; while ((h1 = face_1()) != 'Q') { if (h1 == 'A'){ if (login()-\u003ename[0] != NULL){ system(\"cls\"); face_2(); } } else if (h1 == 'B') add_user(); } return 0; } ","date":"2023-08-11","objectID":"/2023/08/bank-manage-system-by-c/:1:2","tags":["C语言","系统"],"title":"银行管理系统实例(C语言版）","uri":"/2023/08/bank-manage-system-by-c/"},{"categories":["编码语言"],"content":"3. 功能函数文件（function.cpp） /* **功能函数 **ASorb time:201807 */ #include\"banksystem.h\" //添加新用户 void add_user(){ int user_num(); void file_read(user*); void file_save(user*, int); user p = { NULL }; char y = NULL; printf(\"\\n\\n注册用户\\n\"); printf(\"--------------\\n你的姓名（20字符内）：\"); fflush(stdin); gets(p.name); printf(\"你的密码（6个字符）：\"); fflush(stdin); gets(p.pass); if (strlen(p.name) == 0 || strlen(p.name) \u003e 20){ printf(\"ERROR224：姓名格式错误！\\n\"); y = 'N'; } if (strlen(p.pass) != 6){ printf(\"ERROR224：密码格式错误！\\n\"); y = 'N'; } if (y == NULL){ user list[user_max] = { NULL }; file_read(list); for (int i = user_num() - 1; i \u003e= 0; i--) if (strcmp(list[i].name, p.name) == 0){ printf(\"------------------\\n\"); printf(\"提示：系统检测到存在相同的用户名，继续注册将添加新的卡号！\\n\"); printf(\"\\tY.继续\\t回车键放弃\\n\"); printf(\"键入选择：\"); fflush(stdin); y = getchar(); } if (y == 'Y' || y == NULL){ (p.card) = ((list + (user_num() - 1))-\u003ecard + 1); //新银行卡号 p.balance = 0; list[user_num()] = p; //加入用户 file_save(list, user_num() + 1); system(\"cls\"); printf(\"提示：注册成功！\\n\\t用户名：%s\\t卡号:%d\", p.name, p.card); } else{ system(\"cls\"); printf(\"提示：用户放弃注册！\"); } } else{ printf(\"\\n提示：注册失败！回车键返回...\\n\"); fflush(stdin); getchar(); system(\"cls\"); } } //用户登录 user* login(){ static user p = { NULL }; int user_num(); void file_read(user*); user list[user_max] = { NULL }; file_read(list); if (p.name[0] == NULL){ printf(\"--------------------\\n\"); printf(\"输入卡号：\"); fflush(stdin); scanf(\"%d\", \u0026p.card); printf(\"输入密码：\"); fflush(stdin); gets(p.pass); for (int i = user_num() - 1; i \u003e= 0; i--){ if (list[i].card == p.card){ if (strcmp(list[i].pass, p.pass) == 0) p = list[i]; else{ p.name[0] = NULL; printf(\"提示：密码错误！回车键返回.....\\n\"); fflush(stdin); getchar(); system(\"cls\"); } break; } else if (i == 0){ p.name[0] = NULL; printf(\"提示：卡号不存在！回车键返回......\\n\"); fflush(stdin); getchar(); system(\"cls\"); } } } else{ for (int i = user_num(); i \u003e= 0; i--) if (list[i].card == p.card){ p = list[i]; break; } } return \u0026p; } //余额查询 void balance_num(){ user* login(); user *p = login(); void handle_save(struct tm*,float,char arr[]); struct tm* time_now(); static int num_1 = 1; struct tm *t = time_now(); printf(\"余额查询-银行系统实例\\n\\n\\n\\n\"); printf(\"\\t┌────────────────┬────────────────┬──────────────────┐\\n\"); printf(\"\\t│姓名：%-10s│卡号：%-10d│余额：%10.2f元│\\n\", p-\u003ename, p-\u003ecard, p-\u003ebalance); printf(\"\\t└────────────────┴────────────────┴──────────────────┘\\n\"); handle_save(t, 0,\"balance\"); //保存记录 printf(\"\\n\\t$$当前时间：%d-%d-%d %d:%d:%d 已记录\", 1900+t-\u003etm_year, 1+t-\u003etm_mon,t-\u003etm_mday,8+t-\u003etm_hour,t-\u003etm_min,t-\u003etm_sec); printf(\"\\n\\nY.刷新\\t回车键返回.....\\n\"); printf(\"----------------\\n键入选择：\"); fflush(stdin); if (getchar() == 'Y'){ system(\"cls\"); printf(\"第 %d 次刷新成功！\\t\",num_1++); balance_num(); } else system(\"cls\"); } //取款 void draw(){ void file_read(user*); void file_save(user*,int); void handle_save(struct tm*, float, char arr[]); struct tm* time_now(); struct tm *t = time_now(); int user_num(); int num_2 = 0; float money; user* login(); user *p = login(); user list[user_max] = { NULL }; printf(\"\\n--------------\\n金额：\"); scanf(\"%f\", \u0026money); if (money \u003c= 0){ system(\"cls\"); printf(\"提示：取款失败，原因金额应大于零！\\t\"); } else if (money \u003e (p-\u003ebalance)) { system(\"cls\"); printf(\"提示：取款失败，原因余额不足！\\t\"); } else { file_read(list); for (num_2; list[num_2].card != p-\u003ecard; num_2++); (p-\u003ebalance) -= money; list[num_2].balance = p-\u003ebalance; handle_save(t, money, \"draw\"); file_save(list, user_num()); system(\"cls\"); printf(\"提示：取款成功! 金额：%.2f元\\t\", money); } } //存款 void deposit(){ void file_read(user*); void file_save(user*, int); void handle_save(struct tm*, float, char arr[]); struct tm* time_now(); struct tm *t = time_now(); int user_num(); int num_3 = 0; float money; user* login(); user *p = login(); user list[user_max] = { NULL }; printf(\"\\n--------------\\n金额：\"); scanf(\"%f\", \u0026money); if (money \u003c= 0){ system(\"cls\"); printf(\"提示：存款失败，原因金额应大于零！\\t\"); } else { file_read(list); for (num_3; list[num_3].card != p-\u003ecard; num_3++); (p-\u003ebalance) += money; list[num_3].balance = p-\u003ebalance; handle_save(t, money, \"deposit\"); file_save(list,","date":"2023-08-11","objectID":"/2023/08/bank-manage-system-by-c/:1:3","tags":["C语言","系统"],"title":"银行管理系统实例(C语言版）","uri":"/2023/08/bank-manage-system-by-c/"},{"categories":["编码语言"],"content":"4. 数据操作文件（datalink.cpp） /* **文件操作 **ASorb time:201807 */ #include\"banksystem.h\" //文件检测 void file_true(){ void file_save(user*, int); FILE *data = fopen(data_file, \"rb\"); if (data == NULL){ user p={NULL}; strcpy(p.name,\"asorb\"); p.card=18072801; strcpy(p.pass,\"123456\"); p.balance=100; //定义一条测试数据 file_save(\u0026p, 1); //保存测试的数据 } else fclose(data); } //写入文件 void file_save(user *p, int count) { void data_j(user*); for (int i = 0; i \u003c count; i++) data_j(p + i); FILE *data = fopen(data_file, \"wb\"); fwrite(p, user_size, count, data); fclose(data); } //读取文件 void file_read(user *p){ void data_i(user*); FILE *data = fopen(data_file, \"rb\"); fread(p, user_size, user_max, data); for (int i = 0; (p + i)-\u003ename[0] != NULL; i++) data_i(p + i); fclose(data); } ","date":"2023-08-11","objectID":"/2023/08/bank-manage-system-by-c/:1:4","tags":["C语言","系统"],"title":"银行管理系统实例(C语言版）","uri":"/2023/08/bank-manage-system-by-c/"},{"categories":["编码语言"],"content":"5. 界面文件（interface.cpp） /* **显示菜单 **ASorb time:201807 */ #include\"banksystem.h\" //初始化窗口 void face(){ system(\"title 银行系统实例\"); system(\"color 2F\"); } //初始界面 char face_1(){ char h1; printf(\"\\nAuthor:ASorb\\tTime:201807\"); printf(\"\\n\\n\\n\\n\\n\\n\\t\\t\\tA.进入系统\\tB.新用户\\n\\n\\t\\t\\tQ.退出系统\\n\"); printf(\"\\n\\n---------------\\n键入序号：\"); fflush(stdin); //清除输入缓存 h1 = getchar(); if (h1 == 'A' || h1 == 'B' || h1 == 'Q') return h1; else{ system(\"cls\"); printf(\"提示：选择有误，重新选择！\"); } } //登录后界面 void face_2(){ user* login(); user *p = login(); void balance_num(); void draw(); void deposit(); void editpass(); void account(); char del_user(); char out_login(); void handle_list(); void user_list(); void cover(); char h1; while (1){ printf(\"欢迎用户：%s\\n\", p-\u003ename); printf(\"\\n\\n\\n\\n\\t\\t\\tA.余额查询\\tB.取款\\n\"); printf(\"\\n\\t\\t\\tC.修改密码\\tD.存款\\n\"); printf(\"\\n\\t\\t\\tE.名下账户\\tF.注销\\n\"); printf(\"\\n\\t\\t\\tG.登出系统\\tH.记录\\n\"); printf(\"\\n\\t\\t\\tQ.返回上一级\\tI.转账\\n\"); if (p-\u003ecard == 18072801) printf(\"\\n\\t\\t\\t\\tU.用户列表*\\n\"); printf(\"\\n----------------\\n键入序号：\"); fflush(stdin); if ((h1 = getchar()) \u003e= 'A'\u0026\u0026h1 \u003c= 'I'){ switch (h1){ case 'A': system(\"cls\"); balance_num(); break; case 'B': draw(); break; case 'C': editpass(); break; case 'D': deposit(); break; case 'E': account(); break; case 'F': h1 = del_user(); break; case 'G': h1 = out_login(); break; case 'H': handle_list(); break; case 'I': cover(); } if (h1 == 'Q'){ system(\"cls\"); break; } } else if (h1 == 'Q'){ system(\"cls\"); break; } else if (h1 == 'U'){ system(\"cls\"); user_list(); } else{ system(\"cls\"); printf(\"提示：选择有误，重新选择！\\n\"); } } } ","date":"2023-08-11","objectID":"/2023/08/bank-manage-system-by-c/:1:5","tags":["C语言","系统"],"title":"银行管理系统实例(C语言版）","uri":"/2023/08/bank-manage-system-by-c/"},{"categories":["编码语言"],"content":"效果图 程序截图 ","date":"2023-08-11","objectID":"/2023/08/bank-manage-system-by-c/:2:0","tags":["C语言","系统"],"title":"银行管理系统实例(C语言版）","uri":"/2023/08/bank-manage-system-by-c/"},{"categories":["编码语言"],"content":"下载地址 DEVC++下测试工程文件（源代码）：https://download.csdn.net/download/qq_42304721/10592413 ","date":"2023-08-11","objectID":"/2023/08/bank-manage-system-by-c/:3:0","tags":["C语言","系统"],"title":"银行管理系统实例(C语言版）","uri":"/2023/08/bank-manage-system-by-c/"}]